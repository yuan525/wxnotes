crm  http://demo.micvs.com/crm-newm/console/index
       3009
       zya
       111111
jdbc.url=jdbc:mysql://211.152.55.136:3306/crmdb?useSSL=false
jdbc.username=crm
jdbc.password=hwhLMMcrm2019#
   
蓝湖：https://lanhuapp.com/url/d1lVW
禅道：http://prgm.micvs.com/index.php?m=bug&f=browse&productID=21
       账号：zya
       密码：111111
文档系统：doc.micvs.com
小游戏：wxb0daff93a4ff4a4b
小程序：wx57cd026a0291eb9c

查看所有分支：git branch -a
查看当前分支：git branch
创建分支：git branch <name>
切换分支：git checkout <name>或者git switch <name>
创建+切换分支：git checkout -b <name>或者git switch -c <name>
合并某分支到当前分支：git merge <name>
删除分支：git branch -d <name>

ShowDoc : https://doc.micvs.com/web/#/
                  zya
                 111111

gitlab:https://git.micvs.com/
          15291990201@163.com
           dnsjgll525444


//小程序接收路径参数会乱码需要用decodeURIComponent转码
let src = decodeURIComponent(options.query.q)
接收二维码参数
if (options.q) {
      let src = decodeURIComponent(options.q).split("?shopNo=")
      console.log(src[1])
      that.setData({
        shopNo: src[1]
      })
}

json对象------>json字符串
var jsonStr = JSON.stringify(json);

json字符串----->json对象
var json = JSON.parse(jsonStr);

  gettimes(e) {
    let y = e.substring(0, 4)
    let m = e.substring(4, 6)
    let d = e.substring(6, 8)
    // let hour = res.substring(0, 2)
    // let minute = res.substring(2, 4)
    // let second = res.substring(4, 6)
    let times = y + "-" + m + "-" + d
    return times
  },

//文字图片水平对齐
vertical-align: middle;

//去除空格
let cardno=e.detail.value.replace(/\s+/g, '')

//去除滑动框的滚动条
::-webkit-scrollbar {
  display: none;
  width: 0;
  height: 0;
  color: transparent;
}

//数字英文换行
word-break:break-word;

//字体左右间距
letter-spacing: 3rpx;

//去除图片底部空白部分
vertical-align: bottom；

//去除按钮边框
button::after{ border: none; }

//兼容苹果机底部导航栏
@supports (bottom: constant(safe-area-inset-bottom)) or (bottom: env(safe-area-inset-bottom)) {
    .foot {
        height: calc(env(safe-area-inset-bottom) );
        width: 100%;
    }
    .foot {
        padding-bottom: calc(env(safe-area-inset-bottom) );
    }
}

//类型转换
parseInt()      //转换成整数
parseFloat()  //转换成浮点数
Boolean(value)――把给定的值转换成Boolean型；
Number(value)――把给定的值转换成数字（可以是整数或浮点数）；
String(value)――把给定的值转换成字符串
toFixed(2)――保留小数点后两位，四舍五入，在chorme浏览器中不会完全遵守四舍五入

//保留小数点后两位，不四舍五入
Math.floor(15.7784514000 * 100) / 100  ―― 第一种，先把小数边整数：// 输出结果为 15.77    
Number(15.7784514000.toString().match(/^\d+(?:\.\d{0,2})?/)) ――第二种，当作字符串，使用正则匹配：

 //当前时间戳
var timestamps = (new Date()).valueOf();
var date = new Date();
date .getYear(); //获取当前年份(2位)
date .getFullYear(); //获取完整的年份(4位)
date .getMonth(); //获取当前月份(0-11,0代表1月)
date .getDate(); //获取当前日(1-31)
date .getDay(); //获取当前星期X(0-6,0代表星期天)
date .getTime(); //获取当前时间(从1970.1.1开始的毫秒数)
date .getHours(); //获取当前小时数(0-23)
date .getMinutes(); //获取当前分钟数(0-59)
date .getSeconds(); //获取当前秒数(0-59)
date .getMilliseconds(); //获取当前毫秒数(0-999)
date .toLocaleDateString(); //获取当前日期
var mytime=date .toLocaleTimeString(); //获取当前时间
date .toLocaleString( ); //获取日期与时间

//时间戳转时间
  formatDate(now) {
    var now = new Date(now)
    var year = now.getFullYear();
    var month = now.getMonth() + 1;
    if (month<10){
      month = "0" + month
    }
    var date = now.getDate();
    if (date < 10) {
      date = "0" + date
    }
    // var hour = now.getHours();
    // var minute = now.getMinutes();
    // var second = now.getSeconds();
    return year + "" + month + "" + date;
    // return year + "-" + month + "-" + date + " " + hour + ":" + minute + ":" + second;
  } ,

//刷新当前页面
getCurrentPages()[getCurrentPages().length - 1].onLoad()

//正则验证邮箱
var reg = new RegExp('^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*\.[a-zA-Z0-9]{2,6}$');
var emailVar = reg.test(email);     // 得到的值为布尔型

//给data中的对象的元素单独赋值
     let arr = 'imgLIstanbul.imageUrl'
      that.setData({
           [arr]: res.data.data
       })

//截取字符串
 gettime(e){
    let y = e.substring(0,4)
    let m = e.substring(4, 6)
    let d = e.substring(6, 8)
    let times=y+"年"+m+"月"+d+"日"
    return times
  },
string.split("|");

//向上取整
Math.ceil(）

//可以实现提前加载下一个页面的方法
    var pages = getCurrentPages();//当前页面栈
    if (pages.length > 1) {  
      var beforePage = pages[pages.length - 2];//获取上一个页面实例对象
     // var currPage = pages[pages.length - 1]; // 当前页面，若不对当前页面进行操作，可省去
      beforePage.changeData();//触发父页面中的方法
     currPage.setData({//设置当前页面变量
          errbol:false
        })
    }

//定时器
 var settime = setInterval(function () {
        console.log(that.data.countdown)
        if (that.data.countdown == 1) {
          that.setData({
            countdown: "发送验证码"
          })        
          clearInterval(settime)
          that.getImageCode()
        } else {
          that.setData({
            countdown: that.data.countdown - 1
          })
        }
      }, 1000)

clearInterval(settime)

//文字溢出部分用三个点显示
2.单行
text {
	/*固定宽度*/
	width: 100rpx;
	/*超出部分隐藏*/
	overflow:hidden;
	/*不换行*/
	white-space:nowrap;
	/*添加...*/
	text-overflow:ellipsis;
}

2.多行
text {
        font-size: 38rpx;
        line-height: 38rpx;
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        word-break: break-all;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 2;
}


/* swiper点样式 */

.swiper-box .wx-swiper-dots.wx-swiper-dots-horizontal{
     margin-bottom: 2rpx;
}
.swiper-box .wx-swiper-dot{
    width:14rpx;
    display: inline-flex;
    height: 2rpx;
    margin-left: 10rpx;
    justify-content:space-between;
}
.swiper-box .wx-swiper-dot::before{
    content: '';
    flex-grow: 1; 
    background: rgba(255,255,255,0.8);
    border-radius: 8rpx
}
.swiper-box .wx-swiper-dot-active::before{
    background:#7ccffe;   
}



/*  重写 radio 样式  */
/* 未选中的 背景样式 */
radio .wx-radio-input{
   border-radius: 50%;/* 圆角 */
   width: 35rpx; /* 背景的宽 */
   height: 35rpx; /* 背景的高 */
   background-color: #fff;
}
/* 选中后的 背景样式 （红色背景 无边框 可根据UI需求自己修改） */
radio .wx-radio-input.wx-radio-input-checked{
   border: 1rpx solid black;
   background: red;
}
/* 选中后的 对勾样式 （白色对勾 可根据UI需求自己修改） */
radio .wx-radio-input.wx-radio-input-checked::before{
   border-radius: 50%;/* 圆角 */
   width: 35rpx;/* 选中后对勾大小，不要超过背景的尺寸 */
   height: 35rpx;/* 选中后对勾大小，不要超过背景的尺寸 */
   line-height: 35rpx;
   text-align: center;
   font-size:30rpx; /* 对勾大小 30rpx */
   color:#fff; /* 对勾颜色 白色 */
   background: transparent;
   transform:translate(-50%, -50%) scale(1);
   -webkit-transform:translate(-50%, -50%) scale(1);
}

//H5
<meta charset="UTF-8">
		<meta name="viewport" content="width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no">
		<meta content="telephone=no" name="format-detection">
		<meta content="email=no" name="format-detection">